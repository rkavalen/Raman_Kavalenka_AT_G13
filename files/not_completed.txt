String task (коллекции и потоки, которые можно найти в образцах кода в интернете или подсказках от идеи, категорически не использовать!), каждое подзадание выполняем в отдельном классе
1.1 сделать метод, который позволяет отпечатать в консоль все буквы в столбик из строки текста, которую принимает на вход в виде аргумента.
1.2 сделать метод, который позволяет найти и вывести в консоль все дубликаты слов в строке текста, который принимает на вход в виде аргумента.
1.3 сделать метод, который позволяет найти в тексте все цифры и преобразовать их в массив числовых переменных, вывести все элементы массива в косоль, текст получает на вход в виде аргумента
1.4 имеется текстовый лог в виде (ниже общий вид, т.е. частный случай):

access_log.2020.09.07 212.168.101.5 granted
access_log.2020.09.07 212.168.101.6 denied
access_log.2020.09.07 212.168.101.6 denied
access_log.2020.09.07 212.168.122.6 denied
написать метод, который принимает на вход текст лога и выводит список из уникальных IP адресов и количества удачных и неудачных попыток доступа в формате:
ip 212.168.101.5: ok - 3, failed - 2

1.5 написать метод, который выводит в консоль текущую дату и время в формате:
Сейчас на дворе: 19 сентября, 2020, 3 часа 13 минут

1.6 написать метод, который принимает на вход строку с датой и временем в формате "22.00 07.09.2020" и выводит в консоль в формате "September, 7, 2020 22:00"

1.7 написать метод, который принимает на вход строку текста и выводит в консоль дату, которая на n дней больше, чем текущая в формате "Сгенерированная гласная дата: 7 мая", где n - это количество гласных буков в получаемой строке

1.8 Создать класс StringObjectRunner, где в main методе создать по обьекту предыдущих классов и запустить выполнение созданных методов.

1.9 Переписать в отдельных классах все методы созданные в заданиях 1.1 - 1.7, сделав их статическими.

1.10 Создать класс StringStaticRunner, где в main методе запустить методы классов из предыдущего задания, обратившись к ним статически.


оздать класс обобщенного типа GenericMethodsInGenericClassT<T> и в нем:
-- невозвратный метод genericMethodOneGenArg, принимающий аргумент переменного типа и печатающий в консоль фразу "I am an object of X class", где X - название класса передаваемого аргумента
-- метод genericMethodTwoGenArgs, принимающий 2 аргумента переменного типа и возвращающий строку "We are objects of X class and Y class", где X и Y - название классов передаваемых аргументов
-- невозвратный метод genericMethodHalfGenArgs, принимающий 1 аргумент переменного типа и второй аргумент типа String, и печатающий в консоль фразу "I got an object of X class and string with N characters", где X - название класса передаваемых аргументов, N - количество символов в переданной строке

создать класс GenericMethodsInGenericClassTRunner с методом main и в нем:
-- создать обьекты типа GenericMethodsInGenericClassT<T> с параметрами типа String, Integer, Double и всеми типами, которые содержаться в пакете playground.essence
-- вызывать каждый из методов у каждого из обьектов, в случае, если метод возвратный - отпечатать возвращаемое им значение в консоль
создать класс обобщенного типа GenericMethodsInGenericClassTwoParams<X, Y> и в нем:
-- перегруженный метод genericMethodGenArgs, принимающий 1 или 2 аргумента переменного типа и возвращающий строку "I received N arguments of type: X class, Y class", где N - количество полученных аргументов, X и Y - название классов передаваемых аргументов
-- перегруженный невозвратный метод genericMethodHalfGenArgs, принимающий 1 или 2 аргумента переменного типа и второй или третитй аргумент типа String, и печатающий в консоль фразу "I got an object of X class and Y class and string with N characters", где X - название класса передаваемых аргументов, N - количество символов в переданной строке, перегрузку метода сделать для вариантов параметров типа (X, String), (Y, String)
создать класс GenericMethodsInGenericClassTwoParamsRunner с методом main и в нем:
-- создать обьекты типа GenericMethodsInGenericClassTwoParams <X, Y> с параметрами типа <String, String>, <String, Integer>, <String, Double>,  <Integer, Integer> и всеми типами, которые содержаться в пакете playground.essence, используя каждый из них хотя бы 1 раз
-- вызывать каждый из методов у каждого из обьектов, в случае, если метод возвратный - отпечатать возвращаемое им значение в консоль